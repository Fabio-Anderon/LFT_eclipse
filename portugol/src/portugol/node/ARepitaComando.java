/* This file was generated by SableCC (http://www.sablecc.org/). */

package portugol.node;

import java.util.*;
import portugol.analysis.*;

@SuppressWarnings("nls")
public final class ARepitaComando extends PComando
{
    private TRepita _repita_;
    private final LinkedList<PComandoPtVirg> _comandoPtVirg_ = new LinkedList<PComandoPtVirg>();
    private TAte _ate_;
    private TAbreParantes _abreParantes_;
    private PExpLogica _expLogica_;
    private TFechaParentes _fechaParentes_;
    private TPtVirg _ptVirg_;

    public ARepitaComando()
    {
        // Constructor
    }

    public ARepitaComando(
        @SuppressWarnings("hiding") TRepita _repita_,
        @SuppressWarnings("hiding") List<?> _comandoPtVirg_,
        @SuppressWarnings("hiding") TAte _ate_,
        @SuppressWarnings("hiding") TAbreParantes _abreParantes_,
        @SuppressWarnings("hiding") PExpLogica _expLogica_,
        @SuppressWarnings("hiding") TFechaParentes _fechaParentes_,
        @SuppressWarnings("hiding") TPtVirg _ptVirg_)
    {
        // Constructor
        setRepita(_repita_);

        setComandoPtVirg(_comandoPtVirg_);

        setAte(_ate_);

        setAbreParantes(_abreParantes_);

        setExpLogica(_expLogica_);

        setFechaParentes(_fechaParentes_);

        setPtVirg(_ptVirg_);

    }

    @Override
    public Object clone()
    {
        return new ARepitaComando(
            cloneNode(this._repita_),
            cloneList(this._comandoPtVirg_),
            cloneNode(this._ate_),
            cloneNode(this._abreParantes_),
            cloneNode(this._expLogica_),
            cloneNode(this._fechaParentes_),
            cloneNode(this._ptVirg_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseARepitaComando(this);
    }

    public TRepita getRepita()
    {
        return this._repita_;
    }

    public void setRepita(TRepita node)
    {
        if(this._repita_ != null)
        {
            this._repita_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._repita_ = node;
    }

    public LinkedList<PComandoPtVirg> getComandoPtVirg()
    {
        return this._comandoPtVirg_;
    }

    public void setComandoPtVirg(List<?> list)
    {
        for(PComandoPtVirg e : this._comandoPtVirg_)
        {
            e.parent(null);
        }
        this._comandoPtVirg_.clear();

        for(Object obj_e : list)
        {
            PComandoPtVirg e = (PComandoPtVirg) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._comandoPtVirg_.add(e);
        }
    }

    public TAte getAte()
    {
        return this._ate_;
    }

    public void setAte(TAte node)
    {
        if(this._ate_ != null)
        {
            this._ate_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ate_ = node;
    }

    public TAbreParantes getAbreParantes()
    {
        return this._abreParantes_;
    }

    public void setAbreParantes(TAbreParantes node)
    {
        if(this._abreParantes_ != null)
        {
            this._abreParantes_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._abreParantes_ = node;
    }

    public PExpLogica getExpLogica()
    {
        return this._expLogica_;
    }

    public void setExpLogica(PExpLogica node)
    {
        if(this._expLogica_ != null)
        {
            this._expLogica_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expLogica_ = node;
    }

    public TFechaParentes getFechaParentes()
    {
        return this._fechaParentes_;
    }

    public void setFechaParentes(TFechaParentes node)
    {
        if(this._fechaParentes_ != null)
        {
            this._fechaParentes_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fechaParentes_ = node;
    }

    public TPtVirg getPtVirg()
    {
        return this._ptVirg_;
    }

    public void setPtVirg(TPtVirg node)
    {
        if(this._ptVirg_ != null)
        {
            this._ptVirg_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ptVirg_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._repita_)
            + toString(this._comandoPtVirg_)
            + toString(this._ate_)
            + toString(this._abreParantes_)
            + toString(this._expLogica_)
            + toString(this._fechaParentes_)
            + toString(this._ptVirg_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._repita_ == child)
        {
            this._repita_ = null;
            return;
        }

        if(this._comandoPtVirg_.remove(child))
        {
            return;
        }

        if(this._ate_ == child)
        {
            this._ate_ = null;
            return;
        }

        if(this._abreParantes_ == child)
        {
            this._abreParantes_ = null;
            return;
        }

        if(this._expLogica_ == child)
        {
            this._expLogica_ = null;
            return;
        }

        if(this._fechaParentes_ == child)
        {
            this._fechaParentes_ = null;
            return;
        }

        if(this._ptVirg_ == child)
        {
            this._ptVirg_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._repita_ == oldChild)
        {
            setRepita((TRepita) newChild);
            return;
        }

        for(ListIterator<PComandoPtVirg> i = this._comandoPtVirg_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PComandoPtVirg) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._ate_ == oldChild)
        {
            setAte((TAte) newChild);
            return;
        }

        if(this._abreParantes_ == oldChild)
        {
            setAbreParantes((TAbreParantes) newChild);
            return;
        }

        if(this._expLogica_ == oldChild)
        {
            setExpLogica((PExpLogica) newChild);
            return;
        }

        if(this._fechaParentes_ == oldChild)
        {
            setFechaParentes((TFechaParentes) newChild);
            return;
        }

        if(this._ptVirg_ == oldChild)
        {
            setPtVirg((TPtVirg) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
