/* This file was generated by SableCC (http://www.sablecc.org/). */

package portugol.node;

import portugol.analysis.*;

@SuppressWarnings("nls")
public final class AExpParentesFator extends PFator
{
    private TAbreParantes _abreParantes_;
    private PExp _exp_;
    private TFechaParentes _fechaParentes_;

    public AExpParentesFator()
    {
        // Constructor
    }

    public AExpParentesFator(
        @SuppressWarnings("hiding") TAbreParantes _abreParantes_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TFechaParentes _fechaParentes_)
    {
        // Constructor
        setAbreParantes(_abreParantes_);

        setExp(_exp_);

        setFechaParentes(_fechaParentes_);

    }

    @Override
    public Object clone()
    {
        return new AExpParentesFator(
            cloneNode(this._abreParantes_),
            cloneNode(this._exp_),
            cloneNode(this._fechaParentes_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExpParentesFator(this);
    }

    public TAbreParantes getAbreParantes()
    {
        return this._abreParantes_;
    }

    public void setAbreParantes(TAbreParantes node)
    {
        if(this._abreParantes_ != null)
        {
            this._abreParantes_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._abreParantes_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TFechaParentes getFechaParentes()
    {
        return this._fechaParentes_;
    }

    public void setFechaParentes(TFechaParentes node)
    {
        if(this._fechaParentes_ != null)
        {
            this._fechaParentes_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fechaParentes_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._abreParantes_)
            + toString(this._exp_)
            + toString(this._fechaParentes_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._abreParantes_ == child)
        {
            this._abreParantes_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._fechaParentes_ == child)
        {
            this._fechaParentes_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._abreParantes_ == oldChild)
        {
            setAbreParantes((TAbreParantes) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._fechaParentes_ == oldChild)
        {
            setFechaParentes((TFechaParentes) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
