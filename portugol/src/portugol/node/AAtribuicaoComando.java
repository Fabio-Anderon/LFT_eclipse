/* This file was generated by SableCC (http://www.sablecc.org/). */

package portugol.node;

import portugol.analysis.*;

@SuppressWarnings("nls")
public final class AAtribuicaoComando extends PComando
{
    private PVariavel _variavel_;
    private TAtribuicao _atribuicao_;
    private PExpGlobal _expGlobal_;
    private TPtVirg _ptVirg_;

    public AAtribuicaoComando()
    {
        // Constructor
    }

    public AAtribuicaoComando(
        @SuppressWarnings("hiding") PVariavel _variavel_,
        @SuppressWarnings("hiding") TAtribuicao _atribuicao_,
        @SuppressWarnings("hiding") PExpGlobal _expGlobal_,
        @SuppressWarnings("hiding") TPtVirg _ptVirg_)
    {
        // Constructor
        setVariavel(_variavel_);

        setAtribuicao(_atribuicao_);

        setExpGlobal(_expGlobal_);

        setPtVirg(_ptVirg_);

    }

    @Override
    public Object clone()
    {
        return new AAtribuicaoComando(
            cloneNode(this._variavel_),
            cloneNode(this._atribuicao_),
            cloneNode(this._expGlobal_),
            cloneNode(this._ptVirg_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAtribuicaoComando(this);
    }

    public PVariavel getVariavel()
    {
        return this._variavel_;
    }

    public void setVariavel(PVariavel node)
    {
        if(this._variavel_ != null)
        {
            this._variavel_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._variavel_ = node;
    }

    public TAtribuicao getAtribuicao()
    {
        return this._atribuicao_;
    }

    public void setAtribuicao(TAtribuicao node)
    {
        if(this._atribuicao_ != null)
        {
            this._atribuicao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._atribuicao_ = node;
    }

    public PExpGlobal getExpGlobal()
    {
        return this._expGlobal_;
    }

    public void setExpGlobal(PExpGlobal node)
    {
        if(this._expGlobal_ != null)
        {
            this._expGlobal_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expGlobal_ = node;
    }

    public TPtVirg getPtVirg()
    {
        return this._ptVirg_;
    }

    public void setPtVirg(TPtVirg node)
    {
        if(this._ptVirg_ != null)
        {
            this._ptVirg_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ptVirg_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._variavel_)
            + toString(this._atribuicao_)
            + toString(this._expGlobal_)
            + toString(this._ptVirg_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._variavel_ == child)
        {
            this._variavel_ = null;
            return;
        }

        if(this._atribuicao_ == child)
        {
            this._atribuicao_ = null;
            return;
        }

        if(this._expGlobal_ == child)
        {
            this._expGlobal_ = null;
            return;
        }

        if(this._ptVirg_ == child)
        {
            this._ptVirg_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._variavel_ == oldChild)
        {
            setVariavel((PVariavel) newChild);
            return;
        }

        if(this._atribuicao_ == oldChild)
        {
            setAtribuicao((TAtribuicao) newChild);
            return;
        }

        if(this._expGlobal_ == oldChild)
        {
            setExpGlobal((PExpGlobal) newChild);
            return;
        }

        if(this._ptVirg_ == oldChild)
        {
            setPtVirg((TPtVirg) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
