/* This file was generated by SableCC (http://www.sablecc.org/). */

package portugol.parser;

import portugol.lexer.*;
import portugol.node.*;
import portugol.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList<Object> listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PPrograma node1 = (PPrograma) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AAprograma1Programa */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list, false);
            }
            break;
            case 1: /* reduce AAprograma2Programa */
            {
                ArrayList<Object> list = new1();
                push(goTo(0), list, false);
            }
            break;
            case 2: /* reduce AAprograma3Programa */
            {
                ArrayList<Object> list = new2();
                push(goTo(0), list, false);
            }
            break;
            case 3: /* reduce AAprograma4Programa */
            {
                ArrayList<Object> list = new3();
                push(goTo(0), list, false);
            }
            break;
            case 4: /* reduce AAvariaveldeclaracao1Declaracao */
            {
                ArrayList<Object> list = new4();
                push(goTo(1), list, false);
            }
            break;
            case 5: /* reduce AAvariaveldeclaracao2Declaracao */
            {
                ArrayList<Object> list = new5();
                push(goTo(1), list, false);
            }
            break;
            case 6: /* reduce AConstDeclaracao */
            {
                ArrayList<Object> list = new6();
                push(goTo(1), list, false);
            }
            break;
            case 7: /* reduce ADeclVar */
            {
                ArrayList<Object> list = new7();
                push(goTo(2), list, false);
            }
            break;
            case 8: /* reduce ARealTipo */
            {
                ArrayList<Object> list = new8();
                push(goTo(3), list, false);
            }
            break;
            case 9: /* reduce AIntTipo */
            {
                ArrayList<Object> list = new9();
                push(goTo(3), list, false);
            }
            break;
            case 10: /* reduce ACharTipo */
            {
                ArrayList<Object> list = new10();
                push(goTo(3), list, false);
            }
            break;
            case 11: /* reduce AIdVariavel */
            {
                ArrayList<Object> list = new11();
                push(goTo(4), list, false);
            }
            break;
            case 12: /* reduce AVetorVariavel */
            {
                ArrayList<Object> list = new12();
                push(goTo(4), list, false);
            }
            break;
            case 13: /* reduce AStringValor */
            {
                ArrayList<Object> list = new13();
                push(goTo(5), list, false);
            }
            break;
            case 14: /* reduce ANumIntValor */
            {
                ArrayList<Object> list = new14();
                push(goTo(5), list, false);
            }
            break;
            case 15: /* reduce ANumRealValor */
            {
                ArrayList<Object> list = new15();
                push(goTo(5), list, false);
            }
            break;
            case 16: /* reduce AAtribuicaoComando */
            {
                ArrayList<Object> list = new16();
                push(goTo(6), list, false);
            }
            break;
            case 17: /* reduce AAleiacomando1Comando */
            {
                ArrayList<Object> list = new17();
                push(goTo(6), list, false);
            }
            break;
            case 18: /* reduce AAleiacomando2Comando */
            {
                ArrayList<Object> list = new18();
                push(goTo(6), list, false);
            }
            break;
            case 19: /* reduce AAescrevacomando1Comando */
            {
                ArrayList<Object> list = new19();
                push(goTo(6), list, false);
            }
            break;
            case 20: /* reduce AAescrevacomando2Comando */
            {
                ArrayList<Object> list = new20();
                push(goTo(6), list, false);
            }
            break;
            case 21: /* reduce AAsecomando1Comando */
            {
                ArrayList<Object> list = new21();
                push(goTo(6), list, false);
            }
            break;
            case 22: /* reduce AAsecomando2Comando */
            {
                ArrayList<Object> list = new22();
                push(goTo(6), list, false);
            }
            break;
            case 23: /* reduce AAavaliecomando1Comando */
            {
                ArrayList<Object> list = new23();
                push(goTo(6), list, false);
            }
            break;
            case 24: /* reduce AAavaliecomando2Comando */
            {
                ArrayList<Object> list = new24();
                push(goTo(6), list, false);
            }
            break;
            case 25: /* reduce AAavaliecomando3Comando */
            {
                ArrayList<Object> list = new25();
                push(goTo(6), list, false);
            }
            break;
            case 26: /* reduce AAavaliecomando4Comando */
            {
                ArrayList<Object> list = new26();
                push(goTo(6), list, false);
            }
            break;
            case 27: /* reduce AEnquantoComando */
            {
                ArrayList<Object> list = new27();
                push(goTo(6), list, false);
            }
            break;
            case 28: /* reduce ARepitaComando */
            {
                ArrayList<Object> list = new28();
                push(goTo(6), list, false);
            }
            break;
            case 29: /* reduce AAparacomando1Comando */
            {
                ArrayList<Object> list = new29();
                push(goTo(6), list, false);
            }
            break;
            case 30: /* reduce AAparacomando2Comando */
            {
                ArrayList<Object> list = new30();
                push(goTo(6), list, false);
            }
            break;
            case 31: /* reduce AExpVirgula */
            {
                ArrayList<Object> list = new31();
                push(goTo(7), list, false);
            }
            break;
            case 32: /* reduce AElseParte */
            {
                ArrayList<Object> list = new32();
                push(goTo(8), list, false);
            }
            break;
            case 33: /* reduce ACasoOpcao */
            {
                ArrayList<Object> list = new33();
                push(goTo(9), list, false);
            }
            break;
            case 34: /* reduce APadrao */
            {
                ArrayList<Object> list = new34();
                push(goTo(10), list, false);
            }
            break;
            case 35: /* reduce APasso */
            {
                ArrayList<Object> list = new35();
                push(goTo(11), list, false);
            }
            break;
            case 36: /* reduce AIPara */
            {
                ArrayList<Object> list = new36();
                push(goTo(12), list, false);
            }
            break;
            case 37: /* reduce ANPara */
            {
                ArrayList<Object> list = new37();
                push(goTo(13), list, false);
            }
            break;
            case 38: /* reduce AMenosExpGlobalExpGlobal */
            {
                ArrayList<Object> list = new38();
                push(goTo(14), list, false);
            }
            break;
            case 39: /* reduce AAsomaexpglobal1ExpGlobal */
            {
                ArrayList<Object> list = new39();
                push(goTo(14), list, false);
            }
            break;
            case 40: /* reduce AAsomaexpglobal2ExpGlobal */
            {
                ArrayList<Object> list = new40();
                push(goTo(14), list, false);
            }
            break;
            case 41: /* reduce AExpLogicaExpGlobal */
            {
                ArrayList<Object> list = new41();
                push(goTo(14), list, false);
            }
            break;
            case 42: /* reduce AAprodutotermo1Termo */
            {
                ArrayList<Object> list = new42();
                push(goTo(15), list, false);
            }
            break;
            case 43: /* reduce AAprodutotermo2Termo */
            {
                ArrayList<Object> list = new43();
                push(goTo(15), list, false);
            }
            break;
            case 44: /* reduce AExpGlobalParentesFator */
            {
                ArrayList<Object> list = new44();
                push(goTo(16), list, false);
            }
            break;
            case 45: /* reduce AVariavelFator */
            {
                ArrayList<Object> list = new45();
                push(goTo(16), list, false);
            }
            break;
            case 46: /* reduce AValorFator */
            {
                ArrayList<Object> list = new46();
                push(goTo(16), list, false);
            }
            break;
            case 47: /* reduce AMaisSoma */
            {
                ArrayList<Object> list = new47();
                push(goTo(17), list, false);
            }
            break;
            case 48: /* reduce AMenosSoma */
            {
                ArrayList<Object> list = new48();
                push(goTo(17), list, false);
            }
            break;
            case 49: /* reduce AProdutoMult */
            {
                ArrayList<Object> list = new49();
                push(goTo(18), list, false);
            }
            break;
            case 50: /* reduce ADivisaoMult */
            {
                ArrayList<Object> list = new50();
                push(goTo(18), list, false);
            }
            break;
            case 51: /* reduce ASomaExpTermo */
            {
                ArrayList<Object> list = new51();
                push(goTo(19), list, false);
            }
            break;
            case 52: /* reduce AMultFator */
            {
                ArrayList<Object> list = new52();
                push(goTo(20), list, false);
            }
            break;
            case 53: /* reduce AXorExpLogica */
            {
                ArrayList<Object> list = new53();
                push(goTo(21), list, false);
            }
            break;
            case 54: /* reduce AExpOuExpLogica */
            {
                ArrayList<Object> list = new54();
                push(goTo(21), list, false);
            }
            break;
            case 55: /* reduce AOuExpOu */
            {
                ArrayList<Object> list = new55();
                push(goTo(22), list, false);
            }
            break;
            case 56: /* reduce AExpEExpOu */
            {
                ArrayList<Object> list = new56();
                push(goTo(22), list, false);
            }
            break;
            case 57: /* reduce AEExpE */
            {
                ArrayList<Object> list = new57();
                push(goTo(23), list, false);
            }
            break;
            case 58: /* reduce AExpIgualExpE */
            {
                ArrayList<Object> list = new58();
                push(goTo(23), list, false);
            }
            break;
            case 59: /* reduce AExpIgual */
            {
                ArrayList<Object> list = new59();
                push(goTo(24), list, false);
            }
            break;
            case 60: /* reduce AExpComparacaoExpIgual */
            {
                ArrayList<Object> list = new60();
                push(goTo(24), list, false);
            }
            break;
            case 61: /* reduce AExpComparacao */
            {
                ArrayList<Object> list = new61();
                push(goTo(25), list, false);
            }
            break;
            case 62: /* reduce AExpNaoExpComparacao */
            {
                ArrayList<Object> list = new62();
                push(goTo(25), list, false);
            }
            break;
            case 63: /* reduce AExpNao */
            {
                ArrayList<Object> list = new63();
                push(goTo(26), list, false);
            }
            break;
            case 64: /* reduce AIgualIgualDiferente */
            {
                ArrayList<Object> list = new64();
                push(goTo(27), list, false);
            }
            break;
            case 65: /* reduce ADiferenteIgualDiferente */
            {
                ArrayList<Object> list = new65();
                push(goTo(27), list, false);
            }
            break;
            case 66: /* reduce AMaiorOpComparar */
            {
                ArrayList<Object> list = new66();
                push(goTo(28), list, false);
            }
            break;
            case 67: /* reduce AMenorOpComparar */
            {
                ArrayList<Object> list = new67();
                push(goTo(28), list, false);
            }
            break;
            case 68: /* reduce AMaiorIgualOpComparar */
            {
                ArrayList<Object> list = new68();
                push(goTo(28), list, false);
            }
            break;
            case 69: /* reduce AMenorIgualOpComparar */
            {
                ArrayList<Object> list = new69();
                push(goTo(28), list, false);
            }
            break;
            case 70: /* reduce ATerminal$Declaracao */
            {
                ArrayList<Object> list = new70();
                push(goTo(29), list, true);
            }
            break;
            case 71: /* reduce ANonTerminal$Declaracao */
            {
                ArrayList<Object> list = new71();
                push(goTo(29), list, true);
            }
            break;
            case 72: /* reduce ATerminal$Comando */
            {
                ArrayList<Object> list = new72();
                push(goTo(30), list, true);
            }
            break;
            case 73: /* reduce ANonTerminal$Comando */
            {
                ArrayList<Object> list = new73();
                push(goTo(30), list, true);
            }
            break;
            case 74: /* reduce ATerminal$DeclVar */
            {
                ArrayList<Object> list = new74();
                push(goTo(31), list, true);
            }
            break;
            case 75: /* reduce ANonTerminal$DeclVar */
            {
                ArrayList<Object> list = new75();
                push(goTo(31), list, true);
            }
            break;
            case 76: /* reduce ATerminal$ExpVirgula */
            {
                ArrayList<Object> list = new76();
                push(goTo(32), list, true);
            }
            break;
            case 77: /* reduce ANonTerminal$ExpVirgula */
            {
                ArrayList<Object> list = new77();
                push(goTo(32), list, true);
            }
            break;
            case 78: /* reduce ATerminal$CasoOpcao */
            {
                ArrayList<Object> list = new78();
                push(goTo(33), list, true);
            }
            break;
            case 79: /* reduce ANonTerminal$CasoOpcao */
            {
                ArrayList<Object> list = new79();
                push(goTo(33), list, true);
            }
            break;
            case 80: /* reduce ATerminal$SomaExpTermo */
            {
                ArrayList<Object> list = new80();
                push(goTo(34), list, true);
            }
            break;
            case 81: /* reduce ANonTerminal$SomaExpTermo */
            {
                ArrayList<Object> list = new81();
                push(goTo(34), list, true);
            }
            break;
            case 82: /* reduce ATerminal$MultFator */
            {
                ArrayList<Object> list = new82();
                push(goTo(35), list, true);
            }
            break;
            case 83: /* reduce ANonTerminal$MultFator */
            {
                ArrayList<Object> list = new83();
                push(goTo(35), list, true);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AAprograma1Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TIdentificador tidentificadorNode3;
        TInicio tinicioNode4;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        TFim tfimNode7;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        tinicioNode4 = (TInicio)nodeArrayList3.get(0);
        {
            // Block
        }
        {
            // Block
        }
        tfimNode7 = (TFim)nodeArrayList4.get(0);

        pprogramaNode1 = new APrograma(tprogramaNode2, tidentificadorNode3, tinicioNode4, listNode5, listNode6, tfimNode7);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AAprograma2Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TIdentificador tidentificadorNode3;
        TInicio tinicioNode4;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        TFim tfimNode8;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        tinicioNode4 = (TInicio)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }
        tfimNode8 = (TFim)nodeArrayList5.get(0);

        pprogramaNode1 = new APrograma(tprogramaNode2, tidentificadorNode3, tinicioNode4, listNode6, listNode7, tfimNode8);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AAprograma3Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TIdentificador tidentificadorNode3;
        TInicio tinicioNode4;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        TFim tfimNode8;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        tinicioNode4 = (TInicio)nodeArrayList3.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        tfimNode8 = (TFim)nodeArrayList5.get(0);

        pprogramaNode1 = new APrograma(tprogramaNode2, tidentificadorNode3, tinicioNode4, listNode5, listNode7, tfimNode8);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AAprograma4Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TIdentificador tidentificadorNode3;
        TInicio tinicioNode4;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        TFim tfimNode9;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        tinicioNode4 = (TInicio)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        listNode7 = (LinkedList)nodeArrayList5.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        tfimNode9 = (TFim)nodeArrayList6.get(0);

        pprogramaNode1 = new APrograma(tprogramaNode2, tidentificadorNode3, tinicioNode4, listNode6, listNode8, tfimNode9);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce AAvariaveldeclaracao1Declaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        PTipo ptipoNode2;
        TDoisPts tdoisptsNode3;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        PVariavel pvariavelNode5;
        TPtVirg tptvirgNode6;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tdoisptsNode3 = (TDoisPts)nodeArrayList2.get(0);
        {
            // Block
        }
        pvariavelNode5 = (PVariavel)nodeArrayList3.get(0);
        tptvirgNode6 = (TPtVirg)nodeArrayList4.get(0);

        pdeclaracaoNode1 = new AVariavelDeclaracao(ptipoNode2, tdoisptsNode3, listNode4, pvariavelNode5, tptvirgNode6);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce AAvariaveldeclaracao2Declaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        PTipo ptipoNode2;
        TDoisPts tdoisptsNode3;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        PVariavel pvariavelNode6;
        TPtVirg tptvirgNode7;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tdoisptsNode3 = (TDoisPts)nodeArrayList2.get(0);
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        pvariavelNode6 = (PVariavel)nodeArrayList4.get(0);
        tptvirgNode7 = (TPtVirg)nodeArrayList5.get(0);

        pdeclaracaoNode1 = new AVariavelDeclaracao(ptipoNode2, tdoisptsNode3, listNode5, pvariavelNode6, tptvirgNode7);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AConstDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        TConst tconstNode2;
        TIdentificador tidentificadorNode3;
        PValor pvalorNode4;
        TPtVirg tptvirgNode5;
        tconstNode2 = (TConst)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        pvalorNode4 = (PValor)nodeArrayList3.get(0);
        tptvirgNode5 = (TPtVirg)nodeArrayList4.get(0);

        pdeclaracaoNode1 = new AConstDeclaracao(tconstNode2, tidentificadorNode3, pvalorNode4, tptvirgNode5);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce ADeclVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclVar pdeclvarNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        TVirgula tvirgulaNode3;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);

        pdeclvarNode1 = new ADeclVar(pvariavelNode2, tvirgulaNode3);
        }
	nodeList.add(pdeclvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce ARealTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TReal trealNode2;
        trealNode2 = (TReal)nodeArrayList1.get(0);

        ptipoNode1 = new ARealTipo(trealNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AIntTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TInteiro tinteiroNode2;
        tinteiroNode2 = (TInteiro)nodeArrayList1.get(0);

        ptipoNode1 = new AIntTipo(tinteiroNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce ACharTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TCaractere tcaractereNode2;
        tcaractereNode2 = (TCaractere)nodeArrayList1.get(0);

        ptipoNode1 = new ACharTipo(tcaractereNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AIdVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariavel pvariavelNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pvariavelNode1 = new AIdVariavel(tidentificadorNode2);
        }
	nodeList.add(pvariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AVetorVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariavel pvariavelNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        TAbreColchete tabrecolcheteNode3;
        TNumInt tnumintNode4;
        TFechaColchete tfechacolcheteNode5;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        tabrecolcheteNode3 = (TAbreColchete)nodeArrayList2.get(0);
        tnumintNode4 = (TNumInt)nodeArrayList3.get(0);
        tfechacolcheteNode5 = (TFechaColchete)nodeArrayList4.get(0);

        pvariavelNode1 = new AVetorVariavel(tidentificadorNode2, tabrecolcheteNode3, tnumintNode4, tfechacolcheteNode5);
        }
	nodeList.add(pvariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AStringValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        pvalorNode1 = new AStringValor(tstringNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce ANumIntValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumInt tnumintNode2;
        tnumintNode2 = (TNumInt)nodeArrayList1.get(0);

        pvalorNode1 = new ANumIntValor(tnumintNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce ANumRealValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumReal tnumrealNode2;
        tnumrealNode2 = (TNumReal)nodeArrayList1.get(0);

        pvalorNode1 = new ANumRealValor(tnumrealNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AAtribuicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        TAtribuicao tatribuicaoNode3;
        PExpGlobal pexpglobalNode4;
        TPtVirg tptvirgNode5;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        pexpglobalNode4 = (PExpGlobal)nodeArrayList3.get(0);
        tptvirgNode5 = (TPtVirg)nodeArrayList4.get(0);

        pcomandoNode1 = new AAtribuicaoComando(pvariavelNode2, tatribuicaoNode3, pexpglobalNode4, tptvirgNode5);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AAleiacomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TLeia tleiaNode2;
        TAbreParantes tabreparantesNode3;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        PVariavel pvariavelNode5;
        TFechaParentes tfechaparentesNode6;
        TPtVirg tptvirgNode7;
        tleiaNode2 = (TLeia)nodeArrayList1.get(0);
        tabreparantesNode3 = (TAbreParantes)nodeArrayList2.get(0);
        {
            // Block
        }
        pvariavelNode5 = (PVariavel)nodeArrayList3.get(0);
        tfechaparentesNode6 = (TFechaParentes)nodeArrayList4.get(0);
        tptvirgNode7 = (TPtVirg)nodeArrayList5.get(0);

        pcomandoNode1 = new ALeiaComando(tleiaNode2, tabreparantesNode3, listNode4, pvariavelNode5, tfechaparentesNode6, tptvirgNode7);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AAleiacomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TLeia tleiaNode2;
        TAbreParantes tabreparantesNode3;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        PVariavel pvariavelNode6;
        TFechaParentes tfechaparentesNode7;
        TPtVirg tptvirgNode8;
        tleiaNode2 = (TLeia)nodeArrayList1.get(0);
        tabreparantesNode3 = (TAbreParantes)nodeArrayList2.get(0);
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        pvariavelNode6 = (PVariavel)nodeArrayList4.get(0);
        tfechaparentesNode7 = (TFechaParentes)nodeArrayList5.get(0);
        tptvirgNode8 = (TPtVirg)nodeArrayList6.get(0);

        pcomandoNode1 = new ALeiaComando(tleiaNode2, tabreparantesNode3, listNode5, pvariavelNode6, tfechaparentesNode7, tptvirgNode8);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AAescrevacomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TAbreParantes tabreparantesNode3;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        PExpGlobal pexpglobalNode5;
        TFechaParentes tfechaparentesNode6;
        TPtVirg tptvirgNode7;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        tabreparantesNode3 = (TAbreParantes)nodeArrayList2.get(0);
        {
            // Block
        }
        pexpglobalNode5 = (PExpGlobal)nodeArrayList3.get(0);
        tfechaparentesNode6 = (TFechaParentes)nodeArrayList4.get(0);
        tptvirgNode7 = (TPtVirg)nodeArrayList5.get(0);

        pcomandoNode1 = new AEscrevaComando(tescrevaNode2, tabreparantesNode3, listNode4, pexpglobalNode5, tfechaparentesNode6, tptvirgNode7);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce AAescrevacomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TAbreParantes tabreparantesNode3;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        PExpGlobal pexpglobalNode6;
        TFechaParentes tfechaparentesNode7;
        TPtVirg tptvirgNode8;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        tabreparantesNode3 = (TAbreParantes)nodeArrayList2.get(0);
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        pexpglobalNode6 = (PExpGlobal)nodeArrayList4.get(0);
        tfechaparentesNode7 = (TFechaParentes)nodeArrayList5.get(0);
        tptvirgNode8 = (TPtVirg)nodeArrayList6.get(0);

        pcomandoNode1 = new AEscrevaComando(tescrevaNode2, tabreparantesNode3, listNode5, pexpglobalNode6, tfechaparentesNode7, tptvirgNode8);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AAsecomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TSe tseNode2;
        TAbreParantes tabreparantesNode3;
        PExpLogica pexplogicaNode4;
        TFechaParentes tfechaparentesNode5;
        TEntao tentaoNode6;
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        @SuppressWarnings("unused") Object nullNode9 = null;
        TFimSe tfimseNode10;
        TPtVirg tptvirgNode11;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tabreparantesNode3 = (TAbreParantes)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfechaparentesNode5 = (TFechaParentes)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        {
            // Block
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        listNode7 = (LinkedList)nodeArrayList6.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        tfimseNode10 = (TFimSe)nodeArrayList7.get(0);
        tptvirgNode11 = (TPtVirg)nodeArrayList8.get(0);

        pcomandoNode1 = new ASeComando(tseNode2, tabreparantesNode3, pexplogicaNode4, tfechaparentesNode5, tentaoNode6, listNode8, null, tfimseNode10, tptvirgNode11);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AAsecomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TSe tseNode2;
        TAbreParantes tabreparantesNode3;
        PExpLogica pexplogicaNode4;
        TFechaParentes tfechaparentesNode5;
        TEntao tentaoNode6;
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        PElseParte pelseparteNode9;
        TFimSe tfimseNode10;
        TPtVirg tptvirgNode11;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tabreparantesNode3 = (TAbreParantes)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfechaparentesNode5 = (TFechaParentes)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        {
            // Block
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        listNode7 = (LinkedList)nodeArrayList6.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        pelseparteNode9 = (PElseParte)nodeArrayList7.get(0);
        tfimseNode10 = (TFimSe)nodeArrayList8.get(0);
        tptvirgNode11 = (TPtVirg)nodeArrayList9.get(0);

        pcomandoNode1 = new ASeComando(tseNode2, tabreparantesNode3, pexplogicaNode4, tfechaparentesNode5, tentaoNode6, listNode8, pelseparteNode9, tfimseNode10, tptvirgNode11);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AAavaliecomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TAbreParantes tabreparantesNode3;
        PExpGlobal pexpglobalNode4;
        TFechaParentes tfechaparentesNode5;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        @SuppressWarnings("unused") Object nullNode7 = null;
        TFimAvalie tfimavalieNode8;
        TPtVirg tptvirgNode9;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tabreparantesNode3 = (TAbreParantes)nodeArrayList2.get(0);
        pexpglobalNode4 = (PExpGlobal)nodeArrayList3.get(0);
        tfechaparentesNode5 = (TFechaParentes)nodeArrayList4.get(0);
        {
            // Block
        }
        tfimavalieNode8 = (TFimAvalie)nodeArrayList5.get(0);
        tptvirgNode9 = (TPtVirg)nodeArrayList6.get(0);

        pcomandoNode1 = new AAvalieComando(tavalieNode2, tabreparantesNode3, pexpglobalNode4, tfechaparentesNode5, listNode6, null, tfimavalieNode8, tptvirgNode9);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AAavaliecomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TAbreParantes tabreparantesNode3;
        PExpGlobal pexpglobalNode4;
        TFechaParentes tfechaparentesNode5;
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        @SuppressWarnings("unused") Object nullNode8 = null;
        TFimAvalie tfimavalieNode9;
        TPtVirg tptvirgNode10;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tabreparantesNode3 = (TAbreParantes)nodeArrayList2.get(0);
        pexpglobalNode4 = (PExpGlobal)nodeArrayList3.get(0);
        tfechaparentesNode5 = (TFechaParentes)nodeArrayList4.get(0);
        {
            // Block
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        tfimavalieNode9 = (TFimAvalie)nodeArrayList6.get(0);
        tptvirgNode10 = (TPtVirg)nodeArrayList7.get(0);

        pcomandoNode1 = new AAvalieComando(tavalieNode2, tabreparantesNode3, pexpglobalNode4, tfechaparentesNode5, listNode7, null, tfimavalieNode9, tptvirgNode10);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AAavaliecomando3Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TAbreParantes tabreparantesNode3;
        PExpGlobal pexpglobalNode4;
        TFechaParentes tfechaparentesNode5;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        PPadrao ppadraoNode7;
        TFimAvalie tfimavalieNode8;
        TPtVirg tptvirgNode9;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tabreparantesNode3 = (TAbreParantes)nodeArrayList2.get(0);
        pexpglobalNode4 = (PExpGlobal)nodeArrayList3.get(0);
        tfechaparentesNode5 = (TFechaParentes)nodeArrayList4.get(0);
        {
            // Block
        }
        ppadraoNode7 = (PPadrao)nodeArrayList5.get(0);
        tfimavalieNode8 = (TFimAvalie)nodeArrayList6.get(0);
        tptvirgNode9 = (TPtVirg)nodeArrayList7.get(0);

        pcomandoNode1 = new AAvalieComando(tavalieNode2, tabreparantesNode3, pexpglobalNode4, tfechaparentesNode5, listNode6, ppadraoNode7, tfimavalieNode8, tptvirgNode9);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AAavaliecomando4Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TAbreParantes tabreparantesNode3;
        PExpGlobal pexpglobalNode4;
        TFechaParentes tfechaparentesNode5;
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        PPadrao ppadraoNode8;
        TFimAvalie tfimavalieNode9;
        TPtVirg tptvirgNode10;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tabreparantesNode3 = (TAbreParantes)nodeArrayList2.get(0);
        pexpglobalNode4 = (PExpGlobal)nodeArrayList3.get(0);
        tfechaparentesNode5 = (TFechaParentes)nodeArrayList4.get(0);
        {
            // Block
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        ppadraoNode8 = (PPadrao)nodeArrayList6.get(0);
        tfimavalieNode9 = (TFimAvalie)nodeArrayList7.get(0);
        tptvirgNode10 = (TPtVirg)nodeArrayList8.get(0);

        pcomandoNode1 = new AAvalieComando(tavalieNode2, tabreparantesNode3, pexpglobalNode4, tfechaparentesNode5, listNode7, ppadraoNode8, tfimavalieNode9, tptvirgNode10);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AEnquantoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TAbreParantes tabreparantesNode3;
        PExpLogica pexplogicaNode4;
        TFechaParentes tfechaparentesNode5;
        TFaca tfacaNode6;
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        TFimEnquanto tfimenquantoNode9;
        TPtVirg tptvirgNode10;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tabreparantesNode3 = (TAbreParantes)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfechaparentesNode5 = (TFechaParentes)nodeArrayList4.get(0);
        tfacaNode6 = (TFaca)nodeArrayList5.get(0);
        {
            // Block
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        listNode7 = (LinkedList)nodeArrayList6.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        tfimenquantoNode9 = (TFimEnquanto)nodeArrayList7.get(0);
        tptvirgNode10 = (TPtVirg)nodeArrayList8.get(0);

        pcomandoNode1 = new AEnquantoComando(tenquantoNode2, tabreparantesNode3, pexplogicaNode4, tfechaparentesNode5, tfacaNode6, listNode8, tfimenquantoNode9, tptvirgNode10);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce ARepitaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TRepita trepitaNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        TAte tateNode5;
        TAbreParantes tabreparantesNode6;
        PExpLogica pexplogicaNode7;
        TFechaParentes tfechaparentesNode8;
        TPtVirg tptvirgNode9;
        trepitaNode2 = (TRepita)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        tateNode5 = (TAte)nodeArrayList3.get(0);
        tabreparantesNode6 = (TAbreParantes)nodeArrayList4.get(0);
        pexplogicaNode7 = (PExpLogica)nodeArrayList5.get(0);
        tfechaparentesNode8 = (TFechaParentes)nodeArrayList6.get(0);
        tptvirgNode9 = (TPtVirg)nodeArrayList7.get(0);

        pcomandoNode1 = new ARepitaComando(trepitaNode2, listNode4, tateNode5, tabreparantesNode6, pexplogicaNode7, tfechaparentesNode8, tptvirgNode9);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AAparacomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TPara tparaNode2;
        PVariavel pvariavelNode3;
        TDe tdeNode4;
        PIPara piparaNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        TAte tateNode7;
        PNPara pnparaNode8;
        TFaca tfacaNode9;
        LinkedList<Object> listNode11 = new LinkedList<Object>();
        TFimPara tfimparaNode12;
        TPtVirg tptvirgNode13;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvariavelNode3 = (PVariavel)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        piparaNode5 = (PIPara)nodeArrayList4.get(0);
        tateNode7 = (TAte)nodeArrayList5.get(0);
        pnparaNode8 = (PNPara)nodeArrayList6.get(0);
        tfacaNode9 = (TFaca)nodeArrayList7.get(0);
        {
            // Block
        LinkedList<Object> listNode10 = new LinkedList<Object>();
        listNode10 = (LinkedList)nodeArrayList8.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }
        tfimparaNode12 = (TFimPara)nodeArrayList9.get(0);
        tptvirgNode13 = (TPtVirg)nodeArrayList10.get(0);

        pcomandoNode1 = new AParaComando(tparaNode2, pvariavelNode3, tdeNode4, piparaNode5, null, tateNode7, pnparaNode8, tfacaNode9, listNode11, tfimparaNode12, tptvirgNode13);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AAparacomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TPara tparaNode2;
        PVariavel pvariavelNode3;
        TDe tdeNode4;
        PIPara piparaNode5;
        PPasso ppassoNode6;
        TAte tateNode7;
        PNPara pnparaNode8;
        TFaca tfacaNode9;
        LinkedList<Object> listNode11 = new LinkedList<Object>();
        TFimPara tfimparaNode12;
        TPtVirg tptvirgNode13;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvariavelNode3 = (PVariavel)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        piparaNode5 = (PIPara)nodeArrayList4.get(0);
        ppassoNode6 = (PPasso)nodeArrayList5.get(0);
        tateNode7 = (TAte)nodeArrayList6.get(0);
        pnparaNode8 = (PNPara)nodeArrayList7.get(0);
        tfacaNode9 = (TFaca)nodeArrayList8.get(0);
        {
            // Block
        LinkedList<Object> listNode10 = new LinkedList<Object>();
        listNode10 = (LinkedList)nodeArrayList9.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }
        tfimparaNode12 = (TFimPara)nodeArrayList10.get(0);
        tptvirgNode13 = (TPtVirg)nodeArrayList11.get(0);

        pcomandoNode1 = new AParaComando(tparaNode2, pvariavelNode3, tdeNode4, piparaNode5, ppassoNode6, tateNode7, pnparaNode8, tfacaNode9, listNode11, tfimparaNode12, tptvirgNode13);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AExpVirgula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpVirgula pexpvirgulaNode1;
        {
            // Block
        PExpGlobal pexpglobalNode2;
        TVirgula tvirgulaNode3;
        pexpglobalNode2 = (PExpGlobal)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);

        pexpvirgulaNode1 = new AExpVirgula(pexpglobalNode2, tvirgulaNode3);
        }
	nodeList.add(pexpvirgulaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AElseParte */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PElseParte pelseparteNode1;
        {
            // Block
        TSenao tsenaoNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pelseparteNode1 = new AElseParte(tsenaoNode2, listNode4);
        }
	nodeList.add(pelseparteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce ACasoOpcao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCasoOpcao pcasoopcaoNode1;
        {
            // Block
        TCaso tcasoNode2;
        PValor pvalorNode3;
        TDoisPts tdoisptsNode4;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        tcasoNode2 = (TCaso)nodeArrayList1.get(0);
        pvalorNode3 = (PValor)nodeArrayList2.get(0);
        tdoisptsNode4 = (TDoisPts)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pcasoopcaoNode1 = new ACasoOpcao(tcasoNode2, pvalorNode3, tdoisptsNode4, listNode6);
        }
	nodeList.add(pcasoopcaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce APadrao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPadrao ppadraoNode1;
        {
            // Block
        TSenao tsenaoNode2;
        TDoisPts tdoisptsNode3;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        tdoisptsNode3 = (TDoisPts)nodeArrayList2.get(0);
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        ppadraoNode1 = new APadrao(tsenaoNode2, tdoisptsNode3, listNode5);
        }
	nodeList.add(ppadraoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce APasso */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPasso ppassoNode1;
        {
            // Block
        TPasso tpassoNode2;
        TNumInt tnumintNode3;
        tpassoNode2 = (TPasso)nodeArrayList1.get(0);
        tnumintNode3 = (TNumInt)nodeArrayList2.get(0);

        ppassoNode1 = new APasso(tpassoNode2, tnumintNode3);
        }
	nodeList.add(ppassoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AIPara */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIPara piparaNode1;
        {
            // Block
        TNumInt tnumintNode2;
        tnumintNode2 = (TNumInt)nodeArrayList1.get(0);

        piparaNode1 = new AIPara(tnumintNode2);
        }
	nodeList.add(piparaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce ANPara */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNPara pnparaNode1;
        {
            // Block
        TNumInt tnumintNode2;
        tnumintNode2 = (TNumInt)nodeArrayList1.get(0);

        pnparaNode1 = new ANPara(tnumintNode2);
        }
	nodeList.add(pnparaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AMenosExpGlobalExpGlobal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpGlobal pexpglobalNode1;
        {
            // Block
        TMenos tmenosNode2;
        PExpGlobal pexpglobalNode3;
        tmenosNode2 = (TMenos)nodeArrayList1.get(0);
        pexpglobalNode3 = (PExpGlobal)nodeArrayList2.get(0);

        pexpglobalNode1 = new AMenosExpGlobalExpGlobal(tmenosNode2, pexpglobalNode3);
        }
	nodeList.add(pexpglobalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce AAsomaexpglobal1ExpGlobal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpGlobal pexpglobalNode1;
        {
            // Block
        PTermo ptermoNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        {
            // Block
        }

        pexpglobalNode1 = new ASomaExpGlobal(ptermoNode2, listNode3);
        }
	nodeList.add(pexpglobalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce AAsomaexpglobal2ExpGlobal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpGlobal pexpglobalNode1;
        {
            // Block
        PTermo ptermoNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pexpglobalNode1 = new ASomaExpGlobal(ptermoNode2, listNode4);
        }
	nodeList.add(pexpglobalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce AExpLogicaExpGlobal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpGlobal pexpglobalNode1;
        {
            // Block
        TAbreParantes tabreparantesNode2;
        PExpLogica pexplogicaNode3;
        TFechaParentes tfechaparentesNode4;
        tabreparantesNode2 = (TAbreParantes)nodeArrayList1.get(0);
        pexplogicaNode3 = (PExpLogica)nodeArrayList2.get(0);
        tfechaparentesNode4 = (TFechaParentes)nodeArrayList3.get(0);

        pexpglobalNode1 = new AExpLogicaExpGlobal(tabreparantesNode2, pexplogicaNode3, tfechaparentesNode4);
        }
	nodeList.add(pexpglobalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce AAprodutotermo1Termo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PFator pfatorNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        pfatorNode2 = (PFator)nodeArrayList1.get(0);
        {
            // Block
        }

        ptermoNode1 = new AProdutoTermo(pfatorNode2, listNode3);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce AAprodutotermo2Termo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PFator pfatorNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pfatorNode2 = (PFator)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        ptermoNode1 = new AProdutoTermo(pfatorNode2, listNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce AExpGlobalParentesFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TAbreParantes tabreparantesNode2;
        PExpGlobal pexpglobalNode3;
        TFechaParentes tfechaparentesNode4;
        tabreparantesNode2 = (TAbreParantes)nodeArrayList1.get(0);
        pexpglobalNode3 = (PExpGlobal)nodeArrayList2.get(0);
        tfechaparentesNode4 = (TFechaParentes)nodeArrayList3.get(0);

        pfatorNode1 = new AExpGlobalParentesFator(tabreparantesNode2, pexpglobalNode3, tfechaparentesNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AVariavelFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);

        pfatorNode1 = new AVariavelFator(pvariavelNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce AValorFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        pfatorNode1 = new AValorFator(pvalorNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AMaisSoma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSoma psomaNode1;
        {
            // Block
        TMais tmaisNode2;
        tmaisNode2 = (TMais)nodeArrayList1.get(0);

        psomaNode1 = new AMaisSoma(tmaisNode2);
        }
	nodeList.add(psomaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AMenosSoma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSoma psomaNode1;
        {
            // Block
        TMenos tmenosNode2;
        tmenosNode2 = (TMenos)nodeArrayList1.get(0);

        psomaNode1 = new AMenosSoma(tmenosNode2);
        }
	nodeList.add(psomaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AProdutoMult */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMult pmultNode1;
        {
            // Block
        TProduto tprodutoNode2;
        tprodutoNode2 = (TProduto)nodeArrayList1.get(0);

        pmultNode1 = new AProdutoMult(tprodutoNode2);
        }
	nodeList.add(pmultNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce ADivisaoMult */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMult pmultNode1;
        {
            // Block
        TDivisao tdivisaoNode2;
        tdivisaoNode2 = (TDivisao)nodeArrayList1.get(0);

        pmultNode1 = new ADivisaoMult(tdivisaoNode2);
        }
	nodeList.add(pmultNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce ASomaExpTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSomaExpTermo psomaexptermoNode1;
        {
            // Block
        PSoma psomaNode2;
        PTermo ptermoNode3;
        psomaNode2 = (PSoma)nodeArrayList1.get(0);
        ptermoNode3 = (PTermo)nodeArrayList2.get(0);

        psomaexptermoNode1 = new ASomaExpTermo(psomaNode2, ptermoNode3);
        }
	nodeList.add(psomaexptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce AMultFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMultFator pmultfatorNode1;
        {
            // Block
        PMult pmultNode2;
        PFator pfatorNode3;
        pmultNode2 = (PMult)nodeArrayList1.get(0);
        pfatorNode3 = (PFator)nodeArrayList2.get(0);

        pmultfatorNode1 = new AMultFator(pmultNode2, pfatorNode3);
        }
	nodeList.add(pmultfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AXorExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExpLogica pexplogicaNode2;
        TXor txorNode3;
        PExpOu pexpouNode4;
        pexplogicaNode2 = (PExpLogica)nodeArrayList1.get(0);
        txorNode3 = (TXor)nodeArrayList2.get(0);
        pexpouNode4 = (PExpOu)nodeArrayList3.get(0);

        pexplogicaNode1 = new AXorExpLogica(pexplogicaNode2, txorNode3, pexpouNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce AExpOuExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExpOu pexpouNode2;
        pexpouNode2 = (PExpOu)nodeArrayList1.get(0);

        pexplogicaNode1 = new AExpOuExpLogica(pexpouNode2);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AOuExpOu */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpOu pexpouNode1;
        {
            // Block
        PExpOu pexpouNode2;
        TOu touNode3;
        PExpE pexpeNode4;
        pexpouNode2 = (PExpOu)nodeArrayList1.get(0);
        touNode3 = (TOu)nodeArrayList2.get(0);
        pexpeNode4 = (PExpE)nodeArrayList3.get(0);

        pexpouNode1 = new AOuExpOu(pexpouNode2, touNode3, pexpeNode4);
        }
	nodeList.add(pexpouNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AExpEExpOu */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpOu pexpouNode1;
        {
            // Block
        PExpE pexpeNode2;
        pexpeNode2 = (PExpE)nodeArrayList1.get(0);

        pexpouNode1 = new AExpEExpOu(pexpeNode2);
        }
	nodeList.add(pexpouNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AEExpE */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpE pexpeNode1;
        {
            // Block
        PExpE pexpeNode2;
        TE teNode3;
        PExpIgual pexpigualNode4;
        pexpeNode2 = (PExpE)nodeArrayList1.get(0);
        teNode3 = (TE)nodeArrayList2.get(0);
        pexpigualNode4 = (PExpIgual)nodeArrayList3.get(0);

        pexpeNode1 = new AEExpE(pexpeNode2, teNode3, pexpigualNode4);
        }
	nodeList.add(pexpeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce AExpIgualExpE */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpE pexpeNode1;
        {
            // Block
        PExpIgual pexpigualNode2;
        pexpigualNode2 = (PExpIgual)nodeArrayList1.get(0);

        pexpeNode1 = new AExpIgualExpE(pexpigualNode2);
        }
	nodeList.add(pexpeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AExpIgual */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpIgual pexpigualNode1;
        {
            // Block
        PExpGlobal pexpglobalNode2;
        PIgualDiferente pigualdiferenteNode3;
        PExpGlobal pexpglobalNode4;
        pexpglobalNode2 = (PExpGlobal)nodeArrayList1.get(0);
        pigualdiferenteNode3 = (PIgualDiferente)nodeArrayList2.get(0);
        pexpglobalNode4 = (PExpGlobal)nodeArrayList3.get(0);

        pexpigualNode1 = new AExpIgual(pexpglobalNode2, pigualdiferenteNode3, pexpglobalNode4);
        }
	nodeList.add(pexpigualNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce AExpComparacaoExpIgual */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpIgual pexpigualNode1;
        {
            // Block
        PExpComparacao pexpcomparacaoNode2;
        pexpcomparacaoNode2 = (PExpComparacao)nodeArrayList1.get(0);

        pexpigualNode1 = new AExpComparacaoExpIgual(pexpcomparacaoNode2);
        }
	nodeList.add(pexpigualNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AExpComparacao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpComparacao pexpcomparacaoNode1;
        {
            // Block
        PExpGlobal pexpglobalNode2;
        POpComparar popcompararNode3;
        PExpGlobal pexpglobalNode4;
        pexpglobalNode2 = (PExpGlobal)nodeArrayList1.get(0);
        popcompararNode3 = (POpComparar)nodeArrayList2.get(0);
        pexpglobalNode4 = (PExpGlobal)nodeArrayList3.get(0);

        pexpcomparacaoNode1 = new AExpComparacao(pexpglobalNode2, popcompararNode3, pexpglobalNode4);
        }
	nodeList.add(pexpcomparacaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce AExpNaoExpComparacao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpComparacao pexpcomparacaoNode1;
        {
            // Block
        PExpNao pexpnaoNode2;
        pexpnaoNode2 = (PExpNao)nodeArrayList1.get(0);

        pexpcomparacaoNode1 = new AExpNaoExpComparacao(pexpnaoNode2);
        }
	nodeList.add(pexpcomparacaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce AExpNao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpNao pexpnaoNode1;
        {
            // Block
        TNao tnaoNode2;
        TAbreParantes tabreparantesNode3;
        PExpLogica pexplogicaNode4;
        TFechaParentes tfechaparentesNode5;
        tnaoNode2 = (TNao)nodeArrayList1.get(0);
        tabreparantesNode3 = (TAbreParantes)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfechaparentesNode5 = (TFechaParentes)nodeArrayList4.get(0);

        pexpnaoNode1 = new AExpNao(tnaoNode2, tabreparantesNode3, pexplogicaNode4, tfechaparentesNode5);
        }
	nodeList.add(pexpnaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce AIgualIgualDiferente */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIgualDiferente pigualdiferenteNode1;
        {
            // Block
        TIgual tigualNode2;
        tigualNode2 = (TIgual)nodeArrayList1.get(0);

        pigualdiferenteNode1 = new AIgualIgualDiferente(tigualNode2);
        }
	nodeList.add(pigualdiferenteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce ADiferenteIgualDiferente */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIgualDiferente pigualdiferenteNode1;
        {
            // Block
        TDiferente tdiferenteNode2;
        tdiferenteNode2 = (TDiferente)nodeArrayList1.get(0);

        pigualdiferenteNode1 = new ADiferenteIgualDiferente(tdiferenteNode2);
        }
	nodeList.add(pigualdiferenteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce AMaiorOpComparar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpComparar popcompararNode1;
        {
            // Block
        TMaior tmaiorNode2;
        tmaiorNode2 = (TMaior)nodeArrayList1.get(0);

        popcompararNode1 = new AMaiorOpComparar(tmaiorNode2);
        }
	nodeList.add(popcompararNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce AMenorOpComparar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpComparar popcompararNode1;
        {
            // Block
        TMenor tmenorNode2;
        tmenorNode2 = (TMenor)nodeArrayList1.get(0);

        popcompararNode1 = new AMenorOpComparar(tmenorNode2);
        }
	nodeList.add(popcompararNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce AMaiorIgualOpComparar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpComparar popcompararNode1;
        {
            // Block
        TMaiorIgual tmaiorigualNode2;
        tmaiorigualNode2 = (TMaiorIgual)nodeArrayList1.get(0);

        popcompararNode1 = new AMaiorIgualOpComparar(tmaiorigualNode2);
        }
	nodeList.add(popcompararNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce AMenorIgualOpComparar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpComparar popcompararNode1;
        {
            // Block
        TMenorIgual tmenorigualNode2;
        tmenorigualNode2 = (TMenorIgual)nodeArrayList1.get(0);

        popcompararNode1 = new AMenorIgualOpComparar(tmenorigualNode2);
        }
	nodeList.add(popcompararNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce ATerminal$Declaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PDeclaracao pdeclaracaoNode1;
        pdeclaracaoNode1 = (PDeclaracao)nodeArrayList1.get(0);
	if(pdeclaracaoNode1 != null)
	{
	  listNode2.add(pdeclaracaoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce ANonTerminal$Declaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PDeclaracao pdeclaracaoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdeclaracaoNode2 = (PDeclaracao)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdeclaracaoNode2 != null)
	{
	  listNode3.add(pdeclaracaoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce ATerminal$Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PComando pcomandoNode1;
        pcomandoNode1 = (PComando)nodeArrayList1.get(0);
	if(pcomandoNode1 != null)
	{
	  listNode2.add(pcomandoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce ANonTerminal$Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PComando pcomandoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcomandoNode2 = (PComando)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcomandoNode2 != null)
	{
	  listNode3.add(pcomandoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce ATerminal$DeclVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PDeclVar pdeclvarNode1;
        pdeclvarNode1 = (PDeclVar)nodeArrayList1.get(0);
	if(pdeclvarNode1 != null)
	{
	  listNode2.add(pdeclvarNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce ANonTerminal$DeclVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PDeclVar pdeclvarNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdeclvarNode2 = (PDeclVar)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdeclvarNode2 != null)
	{
	  listNode3.add(pdeclvarNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce ATerminal$ExpVirgula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PExpVirgula pexpvirgulaNode1;
        pexpvirgulaNode1 = (PExpVirgula)nodeArrayList1.get(0);
	if(pexpvirgulaNode1 != null)
	{
	  listNode2.add(pexpvirgulaNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce ANonTerminal$ExpVirgula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpVirgula pexpvirgulaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pexpvirgulaNode2 = (PExpVirgula)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pexpvirgulaNode2 != null)
	{
	  listNode3.add(pexpvirgulaNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce ATerminal$CasoOpcao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PCasoOpcao pcasoopcaoNode1;
        pcasoopcaoNode1 = (PCasoOpcao)nodeArrayList1.get(0);
	if(pcasoopcaoNode1 != null)
	{
	  listNode2.add(pcasoopcaoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce ANonTerminal$CasoOpcao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PCasoOpcao pcasoopcaoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcasoopcaoNode2 = (PCasoOpcao)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcasoopcaoNode2 != null)
	{
	  listNode3.add(pcasoopcaoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce ATerminal$SomaExpTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PSomaExpTermo psomaexptermoNode1;
        psomaexptermoNode1 = (PSomaExpTermo)nodeArrayList1.get(0);
	if(psomaexptermoNode1 != null)
	{
	  listNode2.add(psomaexptermoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce ANonTerminal$SomaExpTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PSomaExpTermo psomaexptermoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        psomaexptermoNode2 = (PSomaExpTermo)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(psomaexptermoNode2 != null)
	{
	  listNode3.add(psomaexptermoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce ATerminal$MultFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PMultFator pmultfatorNode1;
        pmultfatorNode1 = (PMultFator)nodeArrayList1.get(0);
	if(pmultfatorNode1 != null)
	{
	  listNode2.add(pmultfatorNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce ANonTerminal$MultFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PMultFator pmultfatorNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pmultfatorNode2 = (PMultFator)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pmultfatorNode2 != null)
	{
	  listNode3.add(pmultfatorNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {0, SHIFT, 1}, },
			{{-1, ERROR, 1}, {50, SHIFT, 3}, },
			{{-1, ERROR, 2}, {55, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {1, SHIFT, 4}, },
			{{-1, ERROR, 4}, {2, SHIFT, 5}, {3, SHIFT, 6}, {5, SHIFT, 7}, {6, SHIFT, 8}, {7, SHIFT, 9}, {8, SHIFT, 10}, {9, SHIFT, 11}, {10, SHIFT, 12}, {13, SHIFT, 13}, {19, SHIFT, 14}, {21, SHIFT, 15}, {22, SHIFT, 16}, {50, SHIFT, 17}, },
			{{-1, REDUCE, 0}, },
			{{-1, ERROR, 6}, {50, SHIFT, 24}, },
			{{-1, ERROR, 7}, {36, SHIFT, 25}, },
			{{-1, ERROR, 8}, {36, SHIFT, 26}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 10}, },
			{{-1, ERROR, 12}, {36, SHIFT, 27}, },
			{{-1, ERROR, 13}, {36, SHIFT, 28}, },
			{{-1, ERROR, 14}, {36, SHIFT, 29}, },
			{{-1, ERROR, 15}, {5, SHIFT, 7}, {6, SHIFT, 8}, {10, SHIFT, 12}, {13, SHIFT, 13}, {19, SHIFT, 14}, {21, SHIFT, 15}, {22, SHIFT, 16}, {50, SHIFT, 17}, },
			{{-1, ERROR, 16}, {50, SHIFT, 17}, },
			{{-1, REDUCE, 11}, {38, SHIFT, 32}, },
			{{-1, REDUCE, 70}, },
			{{-1, ERROR, 19}, {34, SHIFT, 33}, },
			{{-1, ERROR, 20}, {32, SHIFT, 34}, },
			{{-1, REDUCE, 72}, },
			{{-1, ERROR, 22}, {2, SHIFT, 35}, {3, SHIFT, 6}, {5, SHIFT, 7}, {6, SHIFT, 8}, {7, SHIFT, 9}, {8, SHIFT, 10}, {9, SHIFT, 11}, {10, SHIFT, 12}, {13, SHIFT, 13}, {19, SHIFT, 14}, {21, SHIFT, 15}, {22, SHIFT, 16}, {50, SHIFT, 17}, },
			{{-1, ERROR, 23}, {2, SHIFT, 38}, {5, SHIFT, 7}, {6, SHIFT, 8}, {10, SHIFT, 12}, {13, SHIFT, 13}, {19, SHIFT, 14}, {21, SHIFT, 15}, {22, SHIFT, 16}, {50, SHIFT, 17}, },
			{{-1, ERROR, 24}, {51, SHIFT, 40}, {52, SHIFT, 41}, {53, SHIFT, 42}, },
			{{-1, ERROR, 25}, {29, SHIFT, 44}, {36, SHIFT, 45}, {50, SHIFT, 17}, {51, SHIFT, 40}, {52, SHIFT, 41}, {53, SHIFT, 42}, },
			{{-1, ERROR, 26}, {50, SHIFT, 17}, },
			{{-1, ERROR, 27}, {29, SHIFT, 44}, {36, SHIFT, 45}, {42, SHIFT, 56}, {50, SHIFT, 17}, {51, SHIFT, 40}, {52, SHIFT, 41}, {53, SHIFT, 42}, },
			{{-1, ERROR, 28}, {29, SHIFT, 44}, {36, SHIFT, 45}, {50, SHIFT, 17}, {51, SHIFT, 40}, {52, SHIFT, 41}, {53, SHIFT, 42}, },
			{{-1, ERROR, 29}, {29, SHIFT, 44}, {36, SHIFT, 45}, {42, SHIFT, 56}, {50, SHIFT, 17}, {51, SHIFT, 40}, {52, SHIFT, 41}, {53, SHIFT, 42}, },
			{{-1, ERROR, 30}, {5, SHIFT, 7}, {6, SHIFT, 8}, {10, SHIFT, 12}, {13, SHIFT, 13}, {18, SHIFT, 66}, {19, SHIFT, 14}, {21, SHIFT, 15}, {22, SHIFT, 16}, {50, SHIFT, 17}, },
			{{-1, ERROR, 31}, {23, SHIFT, 67}, },
			{{-1, ERROR, 32}, {51, SHIFT, 68}, },
			{{-1, ERROR, 33}, {50, SHIFT, 17}, },
			{{-1, ERROR, 34}, {29, SHIFT, 44}, {36, SHIFT, 45}, {50, SHIFT, 17}, {51, SHIFT, 40}, {52, SHIFT, 41}, {53, SHIFT, 42}, },
			{{-1, REDUCE, 1}, },
			{{-1, REDUCE, 71}, },
			{{-1, ERROR, 37}, {2, SHIFT, 72}, {5, SHIFT, 7}, {6, SHIFT, 8}, {10, SHIFT, 12}, {13, SHIFT, 13}, {19, SHIFT, 14}, {21, SHIFT, 15}, {22, SHIFT, 16}, {50, SHIFT, 17}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 13}, },
			{{-1, ERROR, 43}, {35, SHIFT, 73}, },
			{{-1, ERROR, 44}, {29, SHIFT, 44}, {36, SHIFT, 45}, {50, SHIFT, 17}, {51, SHIFT, 40}, {52, SHIFT, 41}, {53, SHIFT, 42}, },
			{{-1, ERROR, 45}, {29, SHIFT, 44}, {36, SHIFT, 45}, {42, SHIFT, 56}, {50, SHIFT, 17}, {51, SHIFT, 40}, {52, SHIFT, 41}, {53, SHIFT, 42}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 76}, },
			{{-1, ERROR, 49}, {33, SHIFT, 77}, {37, SHIFT, 78}, },
			{{-1, REDUCE, 39}, {28, SHIFT, 79}, {29, SHIFT, 80}, },
			{{-1, REDUCE, 42}, {30, SHIFT, 84}, {31, SHIFT, 85}, },
			{{-1, ERROR, 52}, {29, SHIFT, 44}, {36, SHIFT, 45}, {50, SHIFT, 17}, {51, SHIFT, 40}, {52, SHIFT, 41}, {53, SHIFT, 42}, },
			{{-1, REDUCE, 74}, },
			{{-1, ERROR, 54}, {33, SHIFT, 91}, {37, SHIFT, 92}, },
			{{-1, ERROR, 55}, {50, SHIFT, 17}, },
			{{-1, ERROR, 56}, {36, SHIFT, 95}, },
			{{-1, ERROR, 57}, {44, SHIFT, 96}, {45, SHIFT, 97}, {46, SHIFT, 98}, {47, SHIFT, 99}, {48, SHIFT, 100}, {49, SHIFT, 101}, },
			{{-1, ERROR, 58}, {37, SHIFT, 104}, {40, SHIFT, 105}, },
			{{-1, REDUCE, 54}, {41, SHIFT, 106}, },
			{{-1, REDUCE, 56}, {43, SHIFT, 107}, },
			{{-1, REDUCE, 58}, },
			{{-1, REDUCE, 60}, },
			{{-1, REDUCE, 62}, },
			{{-1, ERROR, 64}, {37, SHIFT, 108}, },
			{{-1, ERROR, 65}, {37, SHIFT, 109}, {40, SHIFT, 105}, },
			{{-1, ERROR, 66}, {36, SHIFT, 110}, },
			{{-1, ERROR, 67}, {51, SHIFT, 111}, },
			{{-1, ERROR, 68}, {39, SHIFT, 113}, },
			{{-1, ERROR, 69}, {33, SHIFT, 91}, {35, SHIFT, 114}, },
			{{-1, ERROR, 70}, {50, SHIFT, 17}, },
			{{-1, ERROR, 71}, {35, SHIFT, 116}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 38}, },
			{{-1, ERROR, 75}, {37, SHIFT, 117}, {44, SHIFT, 96}, {45, SHIFT, 97}, {46, SHIFT, 98}, {47, SHIFT, 99}, {48, SHIFT, 100}, {49, SHIFT, 101}, },
			{{-1, ERROR, 76}, {37, SHIFT, 118}, {40, SHIFT, 105}, },
			{{-1, REDUCE, 31}, },
			{{-1, ERROR, 78}, {35, SHIFT, 119}, },
			{{-1, REDUCE, 47}, },
			{{-1, REDUCE, 48}, },
			{{-1, ERROR, 81}, {36, SHIFT, 120}, {50, SHIFT, 17}, {51, SHIFT, 40}, {52, SHIFT, 41}, {53, SHIFT, 42}, },
			{{-1, REDUCE, 80}, },
			{{-1, REDUCE, 40}, {28, SHIFT, 79}, {29, SHIFT, 80}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 50}, },
			{{-1, ERROR, 86}, {36, SHIFT, 120}, {50, SHIFT, 17}, {51, SHIFT, 40}, {52, SHIFT, 41}, {53, SHIFT, 42}, },
			{{-1, REDUCE, 82}, },
			{{-1, REDUCE, 43}, {30, SHIFT, 84}, {31, SHIFT, 85}, },
			{{-1, REDUCE, 77}, },
			{{-1, ERROR, 90}, {33, SHIFT, 77}, {37, SHIFT, 125}, },
			{{-1, REDUCE, 7}, },
			{{-1, ERROR, 92}, {35, SHIFT, 126}, },
			{{-1, REDUCE, 75}, },
			{{-1, ERROR, 94}, {33, SHIFT, 91}, {37, SHIFT, 127}, },
			{{-1, ERROR, 95}, {29, SHIFT, 44}, {36, SHIFT, 45}, {42, SHIFT, 56}, {50, SHIFT, 17}, {51, SHIFT, 40}, {52, SHIFT, 41}, {53, SHIFT, 42}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 67}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 69}, },
			{{-1, ERROR, 102}, {29, SHIFT, 44}, {36, SHIFT, 45}, {50, SHIFT, 17}, {51, SHIFT, 40}, {52, SHIFT, 41}, {53, SHIFT, 42}, },
			{{-1, ERROR, 103}, {29, SHIFT, 44}, {36, SHIFT, 45}, {50, SHIFT, 17}, {51, SHIFT, 40}, {52, SHIFT, 41}, {53, SHIFT, 42}, },
			{{-1, ERROR, 104}, {11, SHIFT, 131}, },
			{{-1, ERROR, 105}, {29, SHIFT, 44}, {36, SHIFT, 45}, {42, SHIFT, 56}, {50, SHIFT, 17}, {51, SHIFT, 40}, {52, SHIFT, 41}, {53, SHIFT, 42}, },
			{{-1, ERROR, 106}, {29, SHIFT, 44}, {36, SHIFT, 45}, {42, SHIFT, 56}, {50, SHIFT, 17}, {51, SHIFT, 40}, {52, SHIFT, 41}, {53, SHIFT, 42}, },
			{{-1, ERROR, 107}, {29, SHIFT, 44}, {36, SHIFT, 45}, {42, SHIFT, 56}, {50, SHIFT, 17}, {51, SHIFT, 40}, {52, SHIFT, 41}, {53, SHIFT, 42}, },
			{{-1, ERROR, 108}, {14, SHIFT, 135}, {15, SHIFT, 136}, {16, SHIFT, 137}, },
			{{-1, ERROR, 109}, {17, SHIFT, 141}, },
			{{-1, ERROR, 110}, {29, SHIFT, 44}, {36, SHIFT, 45}, {42, SHIFT, 56}, {50, SHIFT, 17}, {51, SHIFT, 40}, {52, SHIFT, 41}, {53, SHIFT, 42}, },
			{{-1, REDUCE, 36}, },
			{{-1, ERROR, 112}, {18, SHIFT, 143}, {24, SHIFT, 144}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 4}, },
			{{-1, ERROR, 115}, {33, SHIFT, 91}, {35, SHIFT, 146}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 19}, },
			{{-1, ERROR, 120}, {29, SHIFT, 44}, {36, SHIFT, 45}, {50, SHIFT, 17}, {51, SHIFT, 40}, {52, SHIFT, 41}, {53, SHIFT, 42}, },
			{{-1, REDUCE, 51}, },
			{{-1, REDUCE, 81}, },
			{{-1, REDUCE, 52}, },
			{{-1, REDUCE, 83}, },
			{{-1, ERROR, 125}, {35, SHIFT, 148}, },
			{{-1, REDUCE, 17}, },
			{{-1, ERROR, 127}, {35, SHIFT, 149}, },
			{{-1, ERROR, 128}, {37, SHIFT, 150}, {40, SHIFT, 105}, },
			{{-1, REDUCE, 59}, },
			{{-1, REDUCE, 61}, },
			{{-1, ERROR, 131}, {5, SHIFT, 7}, {6, SHIFT, 8}, {10, SHIFT, 12}, {13, SHIFT, 13}, {19, SHIFT, 14}, {21, SHIFT, 15}, {22, SHIFT, 16}, {50, SHIFT, 17}, },
			{{-1, REDUCE, 53}, {41, SHIFT, 106}, },
			{{-1, REDUCE, 55}, {43, SHIFT, 107}, },
			{{-1, REDUCE, 57}, },
			{{-1, ERROR, 135}, {51, SHIFT, 40}, {52, SHIFT, 41}, {53, SHIFT, 42}, },
			{{-1, ERROR, 136}, {35, SHIFT, 153}, },
			{{-1, ERROR, 137}, {34, SHIFT, 154}, },
			{{-1, REDUCE, 78}, },
			{{-1, ERROR, 139}, {15, SHIFT, 155}, },
			{{-1, ERROR, 140}, {14, SHIFT, 135}, {15, SHIFT, 156}, {16, SHIFT, 137}, },
			{{-1, ERROR, 141}, {5, SHIFT, 7}, {6, SHIFT, 8}, {10, SHIFT, 12}, {13, SHIFT, 13}, {19, SHIFT, 14}, {21, SHIFT, 15}, {22, SHIFT, 16}, {50, SHIFT, 17}, },
			{{-1, ERROR, 142}, {37, SHIFT, 160}, {40, SHIFT, 105}, },
			{{-1, ERROR, 143}, {51, SHIFT, 161}, },
			{{-1, ERROR, 144}, {51, SHIFT, 163}, },
			{{-1, ERROR, 145}, {18, SHIFT, 164}, },
			{{-1, REDUCE, 5}, },
			{{-1, ERROR, 147}, {37, SHIFT, 117}, },
			{{-1, REDUCE, 20}, },
			{{-1, REDUCE, 18}, },
			{{-1, REDUCE, 63}, },
			{{-1, ERROR, 151}, {5, SHIFT, 7}, {6, SHIFT, 8}, {10, SHIFT, 12}, {12, SHIFT, 165}, {13, SHIFT, 13}, {16, SHIFT, 166}, {19, SHIFT, 14}, {21, SHIFT, 15}, {22, SHIFT, 16}, {50, SHIFT, 17}, },
			{{-1, ERROR, 152}, {34, SHIFT, 168}, },
			{{-1, REDUCE, 23}, },
			{{-1, ERROR, 154}, {5, SHIFT, 7}, {6, SHIFT, 8}, {10, SHIFT, 12}, {13, SHIFT, 13}, {19, SHIFT, 14}, {21, SHIFT, 15}, {22, SHIFT, 16}, {50, SHIFT, 17}, },
			{{-1, ERROR, 155}, {35, SHIFT, 170}, },
			{{-1, ERROR, 156}, {35, SHIFT, 171}, },
			{{-1, REDUCE, 79}, },
			{{-1, ERROR, 158}, {15, SHIFT, 172}, },
			{{-1, ERROR, 159}, {5, SHIFT, 7}, {6, SHIFT, 8}, {10, SHIFT, 12}, {13, SHIFT, 13}, {19, SHIFT, 14}, {20, SHIFT, 173}, {21, SHIFT, 15}, {22, SHIFT, 16}, {50, SHIFT, 17}, },
			{{-1, ERROR, 160}, {35, SHIFT, 174}, },
			{{-1, REDUCE, 37}, },
			{{-1, ERROR, 162}, {17, SHIFT, 175}, },
			{{-1, REDUCE, 35}, },
			{{-1, ERROR, 164}, {51, SHIFT, 161}, },
			{{-1, ERROR, 165}, {35, SHIFT, 177}, },
			{{-1, ERROR, 166}, {5, SHIFT, 7}, {6, SHIFT, 8}, {10, SHIFT, 12}, {13, SHIFT, 13}, {19, SHIFT, 14}, {21, SHIFT, 15}, {22, SHIFT, 16}, {50, SHIFT, 17}, },
			{{-1, ERROR, 167}, {12, SHIFT, 179}, },
			{{-1, ERROR, 168}, {5, SHIFT, 7}, {6, SHIFT, 8}, {10, SHIFT, 12}, {13, SHIFT, 13}, {19, SHIFT, 14}, {21, SHIFT, 15}, {22, SHIFT, 16}, {50, SHIFT, 17}, },
			{{-1, REDUCE, 34}, {5, SHIFT, 7}, {6, SHIFT, 8}, {10, SHIFT, 12}, {13, SHIFT, 13}, {19, SHIFT, 14}, {21, SHIFT, 15}, {22, SHIFT, 16}, {50, SHIFT, 17}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 24}, },
			{{-1, ERROR, 172}, {35, SHIFT, 181}, },
			{{-1, ERROR, 173}, {35, SHIFT, 182}, },
			{{-1, REDUCE, 28}, },
			{{-1, ERROR, 175}, {5, SHIFT, 7}, {6, SHIFT, 8}, {10, SHIFT, 12}, {13, SHIFT, 13}, {19, SHIFT, 14}, {21, SHIFT, 15}, {22, SHIFT, 16}, {50, SHIFT, 17}, },
			{{-1, ERROR, 176}, {17, SHIFT, 184}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 32}, {5, SHIFT, 7}, {6, SHIFT, 8}, {10, SHIFT, 12}, {13, SHIFT, 13}, {19, SHIFT, 14}, {21, SHIFT, 15}, {22, SHIFT, 16}, {50, SHIFT, 17}, },
			{{-1, ERROR, 179}, {35, SHIFT, 185}, },
			{{-1, REDUCE, 33}, {5, SHIFT, 7}, {6, SHIFT, 8}, {10, SHIFT, 12}, {13, SHIFT, 13}, {19, SHIFT, 14}, {21, SHIFT, 15}, {22, SHIFT, 16}, {50, SHIFT, 17}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 27}, },
			{{-1, ERROR, 183}, {5, SHIFT, 7}, {6, SHIFT, 8}, {10, SHIFT, 12}, {13, SHIFT, 13}, {19, SHIFT, 14}, {21, SHIFT, 15}, {22, SHIFT, 16}, {27, SHIFT, 186}, {50, SHIFT, 17}, },
			{{-1, ERROR, 184}, {5, SHIFT, 7}, {6, SHIFT, 8}, {10, SHIFT, 12}, {13, SHIFT, 13}, {19, SHIFT, 14}, {21, SHIFT, 15}, {22, SHIFT, 16}, {50, SHIFT, 17}, },
			{{-1, REDUCE, 22}, },
			{{-1, ERROR, 186}, {35, SHIFT, 188}, },
			{{-1, ERROR, 187}, {5, SHIFT, 7}, {6, SHIFT, 8}, {10, SHIFT, 12}, {13, SHIFT, 13}, {19, SHIFT, 14}, {21, SHIFT, 15}, {22, SHIFT, 16}, {27, SHIFT, 189}, {50, SHIFT, 17}, },
			{{-1, REDUCE, 29}, },
			{{-1, ERROR, 189}, {35, SHIFT, 190}, },
			{{-1, REDUCE, 30}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 18}, {22, 36}, },
			{{-1, 53}, {55, 93}, {70, 93}, },
			{{-1, 19}, },
			{{-1, 20}, {16, 31}, {25, 46}, {26, 54}, {27, 46}, {28, 46}, {29, 46}, {33, 69}, {34, 46}, {44, 46}, {45, 46}, {52, 46}, {55, 94}, {70, 115}, {81, 46}, {86, 46}, {95, 46}, {102, 46}, {103, 46}, {105, 46}, {106, 46}, {107, 46}, {110, 46}, {120, 46}, },
			{{-1, 47}, {24, 43}, {135, 152}, },
			{{-1, 21}, {23, 39}, {30, 39}, {37, 39}, {151, 39}, {159, 39}, {169, 39}, {178, 39}, {180, 39}, {183, 39}, {187, 39}, },
			{{-1, 48}, {52, 89}, },
			{{-1, 167}, },
			{{-1, 138}, {140, 157}, },
			{{-1, 139}, {140, 158}, },
			{{-1, 145}, },
			{{-1, 112}, },
			{{-1, 162}, {164, 176}, },
			{{-1, 57}, {25, 49}, {28, 64}, {34, 71}, {44, 74}, {45, 75}, {52, 90}, {102, 129}, {103, 130}, {120, 147}, },
			{{-1, 50}, {81, 121}, },
			{{-1, 51}, {86, 123}, },
			{{-1, 81}, },
			{{-1, 86}, },
			{{-1, 82}, {83, 122}, },
			{{-1, 87}, {88, 124}, },
			{{-1, 58}, {29, 65}, {45, 76}, {95, 128}, {110, 142}, },
			{{-1, 59}, {105, 132}, },
			{{-1, 60}, {106, 133}, },
			{{-1, 61}, {107, 134}, },
			{{-1, 62}, },
			{{-1, 63}, },
			{{-1, 102}, },
			{{-1, 103}, },
			{{-1, 22}, },
			{{-1, 23}, {15, 30}, {22, 37}, {131, 151}, {141, 159}, {154, 169}, {166, 178}, {168, 180}, {175, 183}, {184, 187}, },
			{{-1, 55}, {33, 70}, },
			{{-1, 52}, },
			{{-1, 140}, },
			{{-1, 83}, },
			{{-1, 88}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'programa'",
			"expecting: identificador",
			"expecting: EOF",
			"expecting: 'inicio'",
			"expecting: 'fim.', 'const', 'escreva', 'leia', 'inteiro', 'real', 'caractere', 'se', 'avalie', 'enquanto', 'repita', 'para', identificador",
			"expecting: '('",
			"expecting: ':'",
			"expecting: 'escreva', 'leia', 'se', 'avalie', 'enquanto', 'repita', 'para', identificador",
			"expecting: 'de', '+', '-', '*', '/', '<-', ',', ';', ')', '[', 'xor', 'ou', 'e', '=', '<>', '>', '<', '>=', '<='",
			"expecting: '<-'",
			"expecting: 'fim.', 'escreva', 'leia', 'se', fim se, 'avalie', 'caso', fim avalie, 'senao', 'ate', 'enquanto', fim enquanto, 'repita', 'para', fim para, identificador",
			"expecting: 'fim.', 'escreva', 'leia', 'se', 'avalie', 'enquanto', 'repita', 'para', identificador",
			"expecting: num int, num real, string",
			"expecting: '-', '(', identificador, num int, num real, string",
			"expecting: '-', '(', 'nao', identificador, num int, num real, string",
			"expecting: 'escreva', 'leia', 'se', 'avalie', 'ate', 'enquanto', 'repita', 'para', identificador",
			"expecting: 'de'",
			"expecting: num int",
			"expecting: '+', '-', '*', '/', ',', ':', ';', ')', 'xor', 'ou', 'e', '=', '<>', '>', '<', '>=', '<='",
			"expecting: ';'",
			"expecting: '+', '-', '*', '/', ',', ';', ')', 'xor', 'ou', 'e', '=', '<>', '>', '<', '>=', '<='",
			"expecting: ',', ')'",
			"expecting: '+', '-', ',', ';', ')', 'xor', 'ou', 'e', '=', '<>', '>', '<', '>=', '<='",
			"expecting: '=', '<>', '>', '<', '>=', '<='",
			"expecting: ')', 'xor'",
			"expecting: ')', 'xor', 'ou'",
			"expecting: ')', 'xor', 'ou', 'e'",
			"expecting: ')'",
			"expecting: ']'",
			"expecting: ',', ';'",
			"expecting: ',', ';', ')', 'xor', 'ou', 'e', '=', '<>', '>', '<', '>=', '<='",
			"expecting: ')', '=', '<>', '>', '<', '>=', '<='",
			"expecting: '(', identificador, num int, num real, string",
			"expecting: 'entao'",
			"expecting: 'caso', fim avalie, 'senao'",
			"expecting: 'faca'",
			"expecting: 'ate', 'passo'",
			"expecting: 'de', '+', '-', '*', '/', '<-', ',', ';', ')', 'xor', 'ou', 'e', '=', '<>', '>', '<', '>=', '<='",
			"expecting: fim avalie",
			"expecting: 'ate'",
			"expecting: 'escreva', 'leia', 'se', fim se, 'avalie', 'senao', 'enquanto', 'repita', 'para', identificador",
			"expecting: 'escreva', 'leia', 'se', 'avalie', 'enquanto', fim enquanto, 'repita', 'para', identificador",
			"expecting: fim se",
			"expecting: 'escreva', 'leia', 'se', 'avalie', fim avalie, 'enquanto', 'repita', 'para', identificador",
			"expecting: 'escreva', 'leia', 'se', fim se, 'avalie', 'enquanto', 'repita', 'para', identificador",
			"expecting: 'escreva', 'leia', 'se', 'avalie', 'caso', fim avalie, 'senao', 'enquanto', 'repita', 'para', identificador",
			"expecting: 'escreva', 'leia', 'se', 'avalie', 'enquanto', 'repita', 'para', fim para, identificador",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 2, 1, 5, 5, 6, 6, 6, 5, 5, 5, 7, 1, 8, 4, 6, 9, 10, 4, 11, 12, 13, 1, 14, 13, 14, 15, 16, 17, 1, 13, 2, 4, 11, 2, 10, 18, 18, 18, 19, 13, 14, 20, 20, 13, 21, 22, 20, 13, 1, 21, 1, 5, 23, 24, 25, 26, 26, 26, 26, 27, 24, 5, 17, 28, 29, 1, 19, 2, 4, 30, 31, 24, 13, 19, 32, 32, 32, 22, 22, 32, 32, 32, 20, 20, 13, 21, 1, 19, 1, 21, 14, 13, 13, 13, 13, 13, 13, 13, 13, 33, 14, 14, 14, 34, 35, 14, 36, 36, 37, 4, 29, 10, 20, 30, 10, 13, 22, 22, 20, 20, 19, 10, 19, 24, 26, 26, 7, 25, 26, 26, 12, 19, 6, 34, 38, 34, 7, 24, 17, 17, 39, 4, 27, 10, 10, 26, 40, 6, 10, 7, 19, 19, 34, 38, 41, 19, 35, 35, 39, 17, 19, 7, 42, 7, 43, 10, 10, 19, 19, 10, 7, 35, 10, 44, 19, 45, 10, 10, 46, 7, 10, 19, 46, 10, 19, 10, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
